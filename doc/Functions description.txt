All functions return null, unless there's said something else.



MATH:

_ready()
Called automatically when launching the game.

rotateArray(array, offset)
Rotates the order of array elements by given offset and returns it. Negative offsets are supported.
Example:
rotateArray(["foo", 0, false, "bar", "baz"], 2) = ["bar", "baz", "foo", 0, false]
rotateArray([0, 1, 2], -1) = [1, 2, 0]

random(from, to)
Returns a random integer from from to to, both inclusive.
Example:
random(-1, 3) can return -1, 0, 1, 2 or 3.

randomItem(array)
Returns a random item from given array.
Example:
randomItem(["foo", 0, false]) can return "foo", 0 or false.

randomOrder(array)
Mixes the order of elements in the given array and returns it.
Example:
randomOrder(["foo", "bar", "baz"]) can return e.g. ["bar", "foo", "baz"], ["foo", "baz", "bar"] or ["bar", "baz", "foo"].



GAME MECHANICS:

_input(event)
Called each time action is pressed. The if's inside are to recognize which action was pressed. (Action can have many buttons, either keyboard or mouse.)

_process(delta)
Called as much times as it's possible. Delta is the time from previous frame. It needs to be copied to a global value (see dt) to access it from other functions.

startGame()
Called when we want to start the game. In the future, this function will be more useful.

initBoard()
Fills the board array with tiles. Some tiles might not be added, allowing to create various level shapes.

initChains()
Fills the board with chains. There mustn't be any match in the start.

randomChainData()
Returns a random chain. See chain element syntax.

isPosValid(pos)
Returns true if the given position is in the playground.
Note:
Returns true also if there isn't any tile in the given position.

neighTile(pos, direction)
Returns the tile neighbor at the given direction.
Note:
Returns null when the given position or result position is outside of the board.

getTile(boardPos)
Getter to the boardTiles variable (see its syntax for more information). Returns null if there isn't any tile there.

getChain(chainPos)
Returns chain data at the given position. Returns null if there's no chain at given position.

getChainNeighbor(chainPos, direction)
A connection of neighTile and getChain functions. Returns chain data.

getChainNeighbors(chainPos)
Returns a list of 4 neighboring chains.
Note:
If there's no chain neighboring with given chain in some direction, instead of chain data, it puts null into the array.
For example, if there's no chain below the given position, the function returns [<chain data>, <chain data>, null, <chain data>].

isChainConnected(chainPos, direction)
Returns true if the given chain can connect to the chain neighbor at the given direction. Otherwise (including situations the chain doesn't exist) returns false.

getChainConnections(chainPos)
Similiar to isChainConnected, but it returns an array containing connections for each direction.
